/**==================================================================
  - 아래 정수형의 num 변수와, (문자열 배열의) array 변수가 있다.
    어떻게 해야, 100가지의 랜덤숫자를 이용해서 배열에서 넘치지 않고, 범위의 에러 없이
    배열 내부의 값을 꺼낼 수 있을까?
    (아래처럼 범위가 넘치지 않고 반복 되도록 배열의 요소에 접근할 수 있는 방법을 제시)
    "Hello" -> "Jobs" -> "Swift" -> "Cook" -> "Hello"
    (힌트: 나머지 값.)
 ===================================================================**/

var num = Int.random(in: 1...100)
var array = ["Hello", "Jobs", "Swift", "Cook"]

var result = array[num % array.count]
print(result)

/**==================================================================
  - 삼항 연산자를 사용해서 "성공"과 "실패"를 출력.
    (삼항 연산자는 "?"와 ":"를 사용하는 문법)
    number의 변수의 랜덤 숫자가 70점 이상이면 "성공"을 출력
    number의 변수의 랜덤 숫자가 70점 미만이면 "실패"를 출력
 ===================================================================**/

var number = Int.random(in: 50...100)

var isSuccess = number >= 70 ? "성공" : "실패"
print(isSuccess)

/**==================================================================
  -  아래의 반복문을 사용해서, 1부터 20사이의 숫자 중에서 2의 배수를 출력하는 코드를 완성하세요.
 ===================================================================**/

for num in 1...20 {
    if num % 2 == 0 {
        print("2의 배수: \(num)")
    }
}

/**==================================================================
  - 아래의 배열에서, 가장 큰 숫자를 찾아내는 함수의 구현을 완성. 
    배열 전달시 배열 내의 가장 큰 숫자를 찾아내서, 리턴.
    (힌트: 함수 내부에 변수 하나를 만들고, 어떻게 하면 가장 큰 숫자를 지속적으로 이 변수에 담을 수 있을까)
 ===================================================================**/

var numArray = [4, 0, 1, 7, 9, 3]

func findMaxNumber(array:[Int]) -> Int {
    var maxNum = array[0]
    
    for num in array {
        if num > maxNum {
            maxNum = num
        }
    }
    
    return maxNum
}

findMaxNumber(array: numArray)

/**==================================================================
  - 아래의 배열에서, 배열의 앞의 3개 요소를 교체할 수 있는 문법 2가지를 제시.
    예시) 배열 내의 ["A, "B", "C"]를 ["x", "y", "z"]로 교체
    (힌트: 1.서브스크립트 / 2.정식문법)
 ===================================================================**/

var alphabetArray = ["A", "B", "C", "D", "E", "F", "G"]

["x", "y", "z"]

// 1. 서브스크립트
alphabetArray[0...2] = ["x", "y", "z"]

// 2. 정식 문법
alphabetArray.replaceSubrange(0...2, with: ["x", "y", "z"])

/**==================================================================
  - 아래의 puppy 배열에서, 가장 뒤쪽의 문자열 "p"를 제거하는 코드를 작성.
    (힌트: 1) 뒤에서부터 인덱스 확인 2) 인덱스를 이용 배열에서 제거(삭제) )
 ===================================================================**/

var puppy = ["p", "u", "p", "p", "y"]

if let index = puppy.lastIndex(of: "p") {
    puppy.remove(at: index)
}

print(puppy)

/**==================================================================
 - 아래의 딕셔너리에서, 키값 "A"에 해당하는 value값인 "Apple"을 꺼내서 출력.
   (옵셔널 문자열값이 아닌 문자열 값으로 출력.)
   (힌트: 옵셔널 바인딩)
 ===================================================================**/

var dic = ["A": "Apple", "B": "Banana", "C": "City"]

if let result2 = dic["A"] {
    print(result2)
}

var result22 = dic["A"]

if let result = result22 {
    print(result)
}

/**==================================================================
  - 소수를 판별하는 함수를 완성.
    1) 소수인 경우, "소수입니다."를 출력
    2) 소수가 아닌 경우, "소수가 아닙니다."를 출력
    (소수는 1과 자기자신만으로 나누어 떨어지는 1보다 큰 양의 정수)
    (힌트: 숫자를 자기 자신으로 나누어보면 되겠죠?)
 ===================================================================**/

func prime(num: Int) {

    for i in 2..< num {
        if num % i == 0 {
            print("소수가 아닙니다.")
            return
        }
    }
    print("소수입니다.")
}



prime(num: 7)  // 소수입니다.
prime(num: 4)  // 소수가 아닙니다.
prime(num: 11) // 소수입니다.
prime(num: 97) // 소수입니다.

/**==================================================================
 앨런Swift문법 마스터 스쿨 주차 시험 참조
 ===================================================================**/